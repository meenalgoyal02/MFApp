name: Recovery steps in Secondary region.
on: push

env:  
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
    aws-cli-in-github-actions:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Set Environment Variables from File
          uses: ./.github/actions/setup-environment
          with:
            var_file_path: ./.github/variables/recovery_aws.env

        - uses: actions/setup-python@v2
          with:
            python-version: '3.10'
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install awscli
        # - run: |
        #    aws autoscaling update-auto-scaling-group --auto-scaling-group-name $ASG_NAME --desired-capacity 2 --min-size 0 --max-size 3 --region $AWS_REGION
      
        - name: Retrieve id of hosted-zone
          id: get-hosted-zone-id 
          uses: ./.github/actions/get_resource_by_id
          with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}            
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY}}              
            aws-region: ${{ env.AWS_REGION }}              
            resource-type: 'hosted-zone'               
            resource-name: ''               
            resource-tag-name: ${{ env.ALB_TAG_KEY }}              
            resource-tag-value: ${{ env.ALB_TAG_VALUE }} 
            
        - name: Retrieve id of hosted-zone
          id: get-hosted-zone-id-by-name
          uses: ./.github/actions/get_resource_by_id
          with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}            
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY}}              
            aws-region: ${{ env.AWS_REGION }}              
            resource-type: 'hosted-zone'               
            resource-name: 'srepoc.com.'               
            resource-tag-name: ${{ env.ALB_TAG_KEY }}              
            resource-tag-value: ${{ env.ALB_TAG_VALUE }}

        - name: Retrieve DNS name of load balancer for secondary region
          id: secondary-alb-dns-name 
          uses: ./.github/actions/get_resource_by_id
          with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}            
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY}}              
            aws-region: ${{ env.AWS_REGION }}              
            resource-type: 'ALB'               
            resource-name: ''               
            resource-tag-name: ${{ env.ALB_TAG_KEY }}              
            resource-tag-value: ${{ env.ALB_TAG_VALUE }}                   
                
   
        - name: Set Route53 weight in alternate region
          id: disaster-recovery        
          #if: ${{ steps.secondary-alb-dns-name.outputs.resource-id !='' }}
          run: |
            hosted_zone_id=${{ steps.get-hosted-zone-id.outputs.resource-id }}
            echo "Hosted-zone id-$hosted_zone_id"
            alb_id=${{ steps.secondary-alb-dns-name.outputs.resource-id }}
            echo "ALB id-$alb_id"
            # set route 53 records update           
            # CHANGE_OUTPUT=$(aws route53 change-resource-record-sets --hosted-zone-id $hosted_zone_id --change-batch "{ \"Comment\": \"Changes weights of passive region from 0 to 100\",\"Changes\": [{ \"Action\": \"UPSERT\",
            # \"ResourceRecordSet\": {\"Name\": \"${{ env.CNAME }}\", \"Type\": \"CNAME\", \"SetIdentifier\": \"${{ env.SECONDARY_CNAME_IDENTIFIER }}\",\"Weight\": 100,\"TTL\":60,\"ResourceRecords\":[{\"Value\":\" ${{ steps.secondary-alb-dns-name.outputs.resource-id }} \"}]  }}]}")
            # echo "Change Output: $CHANGE_OUTPUT"
            # CHANGE_ID=$(echo $CHANGE_OUTPUT | jq -r '.ChangeInfo.Id')
            # echo "Change ID: $CHANGE_ID"
            # echo "::set-output name=change_id::$CHANGE_ID"
        
        # - name: Wait for Route53 Change to Become INSYNC
        #   id: wait-for-insync
        #   run: |
        #       CHANGE_ID=${{ steps.disaster-recovery.outputs.change_id }}
        #       STATUS="PENDING"
        #       while [ "$STATUS" != "INSYNC" ]; do
        #         echo "Waiting for change $CHANGE_ID to become INSYNC..."
        #         STATUS=$(aws route53 get-change --id $CHANGE_ID | jq -r '.ChangeInfo.Status')
        #         echo "Current status: $STATUS"
        #         if [ "$STATUS" != "INSYNC" ]; then
        #           echo "Not in sync yet. Sleeping for 30 seconds..."
        #           sleep 30
        #         fi
        #       done
        #       echo "Change $CHANGE_ID is now INSYNC."  

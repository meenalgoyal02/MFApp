name: Recovery steps in Secondary region.
on: workflow_dispatch

env:
    AWS_REGION: 'us-east-2'
    EC2_ID: 'i-0550bfc70237ff835'
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    ASG_NAME: 'pocSre'    
    AWS_PRIMARY_REGION: 'us-east-1'
    AWS_SECONDARY_REGION: 'us-east-2'
    HOSTED_ZONE_ID: 'Z02212032GSWAL5ZYLGZ4'
    ALB_TAG_KEY: 'Purpose'
    ALB_TAG_VALUE: 'SRE-POC'
    CNAME: 'primary.srepoc.com'
    PRIMARY_CNAME_IDENTIFIER: 'ec2'
    SECONDARY_CNAME_IDENTIFIER: 'ec2-us-east-2'

jobs:
    aws-cli-in-github-actions:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-python@v2
          with:
            python-version: '3.10'
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install awscli
        - run: |
           aws autoscaling update-auto-scaling-group --auto-scaling-group-name $ASG_NAME --desired-capacity 2 --min-size 0 --max-size 3 --region $AWS_REGION
           #aws ec2 start-instances --instance-ids $EC2_ID --region $AWS_REGION
        - name: Retrieve DNS name of load balancer for secondary region
          id: secondary-alb-dns-name 
          uses: ./.github/actions/get_resource_by_id
          with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}            
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY}}              
            aws-region: ${{ env.AWS_SECONDARY_REGION }}              
            resource-type: ''               
            resource-name: ''               
            resource-tag-name: ${{ env.ALB_TAG_KEY }}              
            resource-tag-value: ${{ env.ALB_TAG_VALUE }}                   
                
        - name: Set Route53 weight in alternate region
          id: disaster-recovery        
          if: ${{ steps.secondary-alb-dns-name.outputs.resource-id !='' }}
          run: |
           # set route 53 records update           
            CHANGE_OUTPUT=$(aws route53 change-resource-record-sets --hosted-zone-id $HOSTED_ZONE_ID --change-batch "{ \"Comment\": \"Changes weights of passive region from 0 to 100\",\"Changes\": [{ \"Action\": \"UPSERT\",
            \"ResourceRecordSet\": {\"Name\": \"${{ env.CNAME }}\", \"Type\": \"CNAME\", \"SetIdentifier\": \"${{ env.SECONDARY_CNAME_IDENTIFIER }}\",\"Weight\": 100,\"TTL\":60,\"ResourceRecords\":[{\"Value\":\" ${{ steps.secondary-alb-dns-name.outputs.resource-id }} \"}]  }}]}")
            echo "Change Output: $CHANGE_OUTPUT"
            CHANGE_ID=$(echo $CHANGE_OUTPUT | jq -r '.ChangeInfo.Id')
            echo "Change ID: $CHANGE_ID"
            echo "::set-output name=change_id::$CHANGE_ID"
        
        - name: Wait for Route53 Change to Become INSYNC
          id: wait-for-insync
          run: |
              CHANGE_ID=${{ steps.disaster-recovery.outputs.change_id }}
              STATUS="PENDING"
              while [ "$STATUS" != "INSYNC" ]; do
                echo "Waiting for change $CHANGE_ID to become INSYNC..."
                STATUS=$(aws route53 get-change --id $CHANGE_ID | jq -r '.ChangeInfo.Status')
                echo "Current status: $STATUS"
                if [ "$STATUS" != "INSYNC" ]; then
                  echo "Not in sync yet. Sleeping for 30 seconds..."
                  sleep 30
                fi
              done
              echo "Change $CHANGE_ID is now INSYNC."  

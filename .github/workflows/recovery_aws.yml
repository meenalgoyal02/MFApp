name: Recovery steps in Secondary region.
on: 
  workflow_call:
    secrets:    
      AWS_ACCESS_KEY_ID:
            required: true
            
      AWS_SECRET_ACCESS_KEY:
                required: true
      SMTP_PASSWORD:
              required: true
    outputs:
      region-failover-successful:
          description: "Boolean value to indicate whether region down was successful or not"
          value: ${{ jobs.aws-cli-in-github-actions.outputs.region-up-or-not }}   
      conclusion:
          description: "Conclusion text that can be sent for notification"             
          value: ${{ jobs.aws-cli-in-github-actions.outputs.conclusion }}   

jobs:
    aws-cli-in-github-actions:
      outputs: 
        region-up-or-not: ${{ steps.verify-region-is-up.outputs.Region-up }}
        conclusion: ${{ steps.conclusion.outputs.value }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Set Environment Variables from File
          uses: ./.github/actions/setup-environment
          with:
            var_file_path: ./.github/variables/recovery_aws.env

        - uses: actions/setup-python@v2
          with:
            python-version: '3.10'
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install awscli
        
        - name: start date and time
          id: start-date
          run: |
              currentDate=$(echo $(date))
              echo "Current date-${currentDate}"
              echo "value=$currentDate">>"$GITHUB_OUTPUT"

        - name: recover-asg
          id: recover-asg
          run: |
           aws autoscaling update-auto-scaling-group --auto-scaling-group-name $ASG_NAME --desired-capacity 2 --min-size 0 --max-size 3 --region $AWS_REGION
      
        - name: Retrieve id of hosted-zone
          id: get-hosted-zone-id 
          uses: ./.github/actions/get_resource_by_id
          with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}            
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY}}              
            aws-region: ${{ env.AWS_REGION }}              
            resource-type: 'hosted-zone'               
            resource-name: ''               
            resource-tag-name: ${{ env.ALB_TAG_KEY }}              
            resource-tag-value: ${{ env.ALB_TAG_VALUE }} 


        - name: Retrieve DNS name of load balancer for secondary region
          id: secondary-alb-dns-name 
          uses: ./.github/actions/get_resource_by_id
          with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}            
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY}}              
            aws-region: ${{ env.AWS_REGION }}              
            resource-type: 'ALB'               
            resource-name: ''               
            resource-tag-name: ${{ env.ALB_TAG_KEY }}              
            resource-tag-value: ${{ env.ALB_TAG_VALUE }}                   
                
   
        - name: Set Route53 weight in alternate region
          id: disaster-recovery        
          #if: ${{ steps.secondary-alb-dns-name.outputs.resource-id !='' }}
          run: |
            hosted_zone_id=${{ steps.get-hosted-zone-id.outputs.resource-id }}
            echo "Hosted-zone id-$hosted_zone_id"
            alb_id=${{ steps.secondary-alb-dns-name.outputs.resource-id }}
            echo "ALB id-$alb_id"
            set route 53 records update           
            CHANGE_OUTPUT=$(aws route53 change-resource-record-sets --hosted-zone-id ${hosted_zone_id} --change-batch "{ \"Comment\": \"Changes weights of passive region from 0 to 100\",\"Changes\": [{ \"Action\": \"UPSERT\",
            \"ResourceRecordSet\": {\"Name\": \"${{ env.CNAME }}\", \"Type\": \"CNAME\", \"SetIdentifier\": \"${{ env.SECONDARY_CNAME_IDENTIFIER }}\",\"Weight\": 100,\"TTL\":60,\"ResourceRecords\":[{\"Value\":\" ${alb_id} \"}]  }}]}")
            echo "Change Output: $CHANGE_OUTPUT"
            CHANGE_ID=$(echo $CHANGE_OUTPUT | jq -r '.ChangeInfo.Id')
            echo "Change ID: $CHANGE_ID"
            echo "::set-output name=change_id::$CHANGE_ID"
        
        - name: Wait for Route53 Change to Become INSYNC
          id: wait-for-insync
          run: |
              CHANGE_ID=${{ steps.disaster-recovery.outputs.change_id }}
              STATUS="PENDING"
              while [ "$STATUS" != "INSYNC" ]; do
                echo "Waiting for change $CHANGE_ID to become INSYNC..."
                STATUS=$(aws route53 get-change --id $CHANGE_ID | jq -r '.ChangeInfo.Status')
                echo "Current status: $STATUS"
                if [ "$STATUS" != "INSYNC" ]; then
                  echo "Not in sync yet. Sleeping for 30 seconds..."
                  sleep 30
                fi
              done
              echo "Change $CHANGE_ID is now INSYNC."  
        - name: Verify whether the URL is up or not
          continue-on-error: true
          id: verify-region-is-up
          run: |  
                sleep 120                   
                HTTP_STATUS=$(curl -s -o /dev/null -I -w "%{http_code}" "${{ env.CNAME }}")
                echo "HTTP Status- ${HTTP_STATUS}"
                if [ "$HTTP_STATUS" -eq 200 ]; then
                  echo "Region up completed."
                  echo "::set-output name=Region-up::true"
                  echo "::set-output name=Email-subject:: Secondary region is up for Repository- ${{ github.repository }}"
                else
                  echo "Region up could not be completed."
                  echo "::set-output name=Region-up::false"
                  echo "::set-output name=Email-subject:: Failed in setting Secondary region up. "
                fi
        - name: end date and time
          id: end-date
          run: |
              currentDate=$(echo $(date))
              echo "Current date-${currentDate}"
              echo "value=$currentDate">>"$GITHUB_OUTPUT"

        - name: action run summary
          id: conclusion
          run: |

            outcomeOfHostUpdate=${{ steps.disaster-recovery.outcome }}
            outcomeOfASGUpdate= ${{ steps.recover-asg.outcome }}

            if [[ "$outcomeOfHostUpdate" == "failure" || "$outcomeOfASGUpdate" == "failure" ]]; then
              value="<h2>Activity execution failed.<h2>"
            else
              value="<h2>Activity execution completed.<h2>"
            fi
            
            value+="<h2><strong>Conclusion :${{ steps.verify-region-is-up.outputs.Email-subject }}</strong></h2>
            <ol>
                <li>Activity Name: Disaster simulation</li>
                <li>AWS Region: ${{ env.AWS_REGION }} </li>
                <li>Impacted resources-<ol>
                        <li>ASG: ${{ env.ASG_NAME }}</li>
                        <li>Hosted-zone:${{ env.CNAME }}</li>
                    </ol>
                </li>
                <li>Activity Start Time:${{ steps.start-date.outputs.value }}</li>
                <li>Activity End Time:${{ steps.end-date.outputs.value }}<br>&nbsp;</li>
            </ol>"
            
            echo "value=$value">>"$GITHUB_OUTPUT"
            echo "Email content-$value"
      
    
        # - name: Send notification email          
        #   uses: dawidd6/action-send-mail@v3
        #   with:
        #           server_address: smtp.gmail.com
        #           server_port: 465
        #           secure: true
        #           from:  ${{ env.SENDER_EMAIL_ID }}
        #           to: ${{ env.RECEIVER_EMAIL_ID }}
        #           username:  ${{env.SENDER_EMAIL_ID}}
        #           password: ${{ secrets.SMTP_PASSWORD }}
        #           subject: ${{ steps.verify-region-is-down.outputs.Email-subject }}                  
        #           body:  |
        #               Gameday Preparation completed with the run of GitHub workflow. Workflow URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        #               Please check the application and take recovery steps, as required.              

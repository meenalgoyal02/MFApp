name: Retrieve id of resource
on: push

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: 'us-east-1'
    TAG_KEY: 'Purpose'
    TAG_VALUE: 'SRE-POC'

jobs:
    get-id-of-resource:
        runs-on: ubuntu-latest
        steps:
        - name: get-id-by-name
          id: id-by-name
          run: |
            output=$(aws elbv2 describe-load-balancers --names pocSre --region $AWS_REGION| jq -r '.LoadBalancers[0].DNSName')
            echo "Query output:$output"

            # Retrieve by tag
            load_balancer_arns=$(aws elbv2 describe-load-balancers --query 'LoadBalancers[*].LoadBalancerArn' --output text)
            echo "2nd Query output: $load_balancer_arns"

            # Step 2: Find the load balancer ARN by tag name
            for arn in $load_balancer_arns; do
            tags=$(aws elbv2 describe-tags --resource-arns $arn --query 'TagDescriptions[0].Tags' --output json)
            name=$(echo $tags | jq -r --arg TAG_KEY "$TAG_KEY" --arg TAG_VALUE "$TAG_VALUE" '.[] | select(.Key == $TAG_KEY and .Value == $TAG_VALUE) | .Value')
            
            if [ "$name" == "$TAG_VALUE" ]; then
                load_balancer_arn=$arn
                break
            fi
            done

            # Check if the load balancer ARN was found
            if [ -z "$load_balancer_arn" ]; then
            echo "Load balancer with tag $TAG_KEY=$TAG_VALUE not found."
            exit 1
            fi

            # Step 3: Retrieve the DNS name of the load balancer
            dns_name=$(aws elbv2 describe-load-balancers --load-balancer-arns "$load_balancer_arn" --query 'LoadBalancers[0].DNSName' --output text)

            echo "Query output:$dns_name"
